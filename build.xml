<project name="User Profile" default="compile" basedir=".">

  <description>
      Build file for the User Profile
  </description>


  <!-- set global properties for this build -->
  <property name="package" value="user profile service"/>
  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="dist" location="dist"/>
  <property name="test" location="test"/>
  <property name="doc" location="docs/javadoc"/>
  <property name="tempunpack" location="unpackedjars"/>
  <property name="classes" location="classes"/>
  <property name="client_classes" location="client_classes"/>
  <property name="jar.file" value="UserProfile.jar"/>
  <property name="war.file" value="UserProfileService.war"/>
  <property name="clientjar.file" value="UserProfileClient.jar"/>
  <property name="war.dir" value="war"/>


  <property environment="env"/>
  <condition property="jardir" value="../jars/lib/jars/">
    <or>
      <equals arg1="${env.JENKINS_JARS_MODULE_PATH}" arg2=""/>
      <not>
        <isset property="env.JENKINS_JARS_MODULE_PATH"/>
      </not>
    </or>
  </condition>
  <!-- Properties in ant are immutable, so the following assignment will only take place if jardir was not set above. -->
  <property name="jardir" location="${env.JENKINS_JARS_MODULE_PATH}/lib/jars"/>

  <condition property="commonjar" value="kbase/common/kbase-common-0.0.24.jar">
    <or>
      <equals arg1="${env.JENKINS_JAVA_COMMON_JARFILE}" arg2=""/>
      <not>
        <isset property="env.JENKINS_JAVA_COMMON_JARFILE"/>
      </not>
    </or>
  </condition>
  <!-- Properties in ant are immutable, so the following assignment will only take place if jardir was not set above. -->
  <property name="commonjar" value="${env.JENKINS_JAVA_COMMON_JARFILE}"/>

  <fileset dir="${jardir}" id="sourceslib">
    <include name="kbase/kbase-common-0.0.24.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="serverlib">
    <include name="ini4j/ini4j-0.5.2.jar"/>
    <include name="jetty/jetty-all-7.0.0.jar"/>
    <include name="jna/jna-3.4.0.jar"/>
    <include name="servlet/servlet-api-2.5.jar"/>
    <include name="syslog4j/syslog4j-0.9.46.jar"/>
    <include name="joda/joda-time-2.2.jar"/>
    <include name="annotation/javax.annotation-api-1.2.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="clientserverlib">
    <include name="junit/junit-4.9.jar"/>
    <include name="kbase/auth/kbase-auth-0.4.4.jar"/>
    <include name="jackson/jackson-annotations-2.2.3.jar"/>
    <include name="jackson/jackson-core-2.2.3.jar"/>
    <include name="jackson/jackson-databind-2.2.3.jar"/>
    <include name="${commonjar}"/>
  </fileset>

  <fileset dir="${jardir}" id="applicationlib">
    <include name="apache_commons/commons-cli-1.2.jar"/>
    <include name="apache_commons/commons-lang-2.4.jar"/>
    <include name="apache_commons/commons-logging-1.1.1.jar"/>
    <include name="apache_commons/commons-configuration-1.10.jar"/>
    <include name="apache_commons/commons-io-2.4.jar"/>
    <include name="google/guava-18.0.jar"/>
    <include name="mongo/mongo-java-driver-3.10.1.jar"/>
    <include name="bson4jackson/bson4jackson-2.2.0-2.2.0.jar"/>
    <include name="slf4j/slf4j-api-1.7.25.jar"/>
    <include name="logback/logback-core-1.1.2.jar"/>
    <include name="logback/logback-classic-1.1.2.jar"/>
  </fileset>
	
  <union id="serverside">
    <fileset refid="serverlib"/>
    <fileset refid="clientserverlib"/>
    <fileset refid="applicationlib"/>
  </union>

  <fileset id="client-jdoc-files" dir="${src}/us/kbase" defaultexcludes="yes">
    <include name="userprofile/*.java"/>
    <exclude name="userprofile/UserProfileServer.java"/>
    <include name="common/service/*.java"/>
    <exclude name="common/service/JsonServer*"/>
    <exclude name="common/service/JacksonTupleModule.java"/>
    <exclude name="common/service/JsonClientCaller.java"/>
    <exclude name="common/service/JsonTreeTraversingParser.java"/>
    <exclude name="common/service/KBaseJsonParser.java"/>
  </fileset>
	
  <fileset id="sources-jdoc-files" dir="${tempunpack}/us/kbase/common/service"
    defaultexcludes="yes">
    <include name="UObject.java"/>
    <include name="JsonTokenStream.java"/>
    <include name="*Exception.java"/>
  </fileset>

  <fileset id="client-class-files" dir="${classes}" defaultexcludes="yes">
    <include name="us/kbase/userprofile/*.class"/>
    <exclude name="us/kbase/userprofile/UserProfileServer.class"/>
    <include name="us/kbase/common/service/*.class"/>
    <exclude name="us/kbase/common/service/JsonServer*"/>
  </fileset>

  <path id="compile.classpath">
    <union refid="serverside"/>
  </path>

  <path id="test.client.import.classpath">
    <fileset refid="clientserverlib"/>
    <fileset file="${dist}/client/${clientjar.file}"/>
    <pathelement path="${test}"/>
  </path>

  <path id="test.classpath">
    <path refid="compile.classpath"/>
    <fileset file="${dist}/${jar.file}"/>
  </path>

	
  <target name="init" description="make directories">
    <!-- Create the output directory structure-->
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="compile_client" description="compile only the client">
    <mkdir dir="${client_classes}"/>
    <javac destdir="${client_classes}" includeantruntime="false" target="1.6" source="1.6"
      debug="true" classpathref="compile.classpath">
      <src path="${src}"/>
    </javac>
    <jar destfile="${dist}/client/${clientjar.file}" basedir="${client_classes}"/>
  	<delete dir="${client_classes}"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile class files-->
    <javac destdir="${classes}" includeantruntime="false" target="1.6" source="1.6"
      debug="true" classpathref="compile.classpath">
      <src path="${src}"/>
    </javac>
    <!-- Copy resource files-->
    <copy todir="${classes}">
      <fileset dir="${src}">
        <patternset>
          <include name="**/*.properties"/>
          <include name="**/*.cfg"/>
          <include name="**/*.spec"/>
          <include name="**/*.instance.*"/>
          <include name="**/instance.*"/>
          <include name="**/*.instance"/>
        </patternset>
      </fileset>
    </copy>
    <!-- Make main jar file-->
    <jar destfile="${dist}/${jar.file}" basedir="${classes}"/>
    <!-- make the client jar-->
    <jar destfile="${dist}/client/${clientjar.file}">
      <fileset refid="client-class-files"/>
    </jar>
  </target>

  <target name="buildwar" description="build the WAR file. Assumes compile has been run">
    <!-- make the war file for the server-->
    <mkdir dir="${war.dir}/lib"/>
    <copy todir="${war.dir}/lib/" flatten="true">
      <union refid="serverside"/>
    </copy>
    <war destfile="${dist}/${war.file}" webxml="${war.dir}/web.xml">
      <classes dir="${classes}"/>
      <lib dir="${war.dir}/lib/"/>
    </war>
    <delete dir="${war.dir}/lib"/>
  </target>


  <target name="javadoc" description="build javadocs">
    <unzip dest="${tempunpack}">
      <fileset refid="sourceslib"/>
    </unzip>
    <javadoc access="protected" author="false" classpathref="compile.classpath"
      destdir="${doc}" nodeprecated="false" nodeprecatedlist="false"
      noindex="false" nonavbar="false" notree="false"
      source="1.7" splitindex="true" use="true" version="true">
      <link href="http://download.oracle.com/javase/7/docs/api/"/>
      <link href="http://fasterxml.github.io/jackson-core/javadoc/2.2.0/"/>
      <link href="http://fasterxml.github.io/jackson-databind/javadoc/2.2.0/"/>
      <fileset refid="client-jdoc-files"/>
      <fileset refid="sources-jdoc-files"/>
    </javadoc>
    <delete dir="${tempunpack}"/>
  </target>

  <target name="test" depends="compile" description="run tests">
    <echo message="starting ${package} tests"/>
    <junit fork="yes" maxmemory="3G" failureproperty="test.failed">
      <classpath refid="test.classpath"/>
      <formatter type="plain" usefile="false" />
      <sysproperty key="test.cfg" value="test.cfg"/>
      <sysproperty key="test.remove-temp-dir" value="${test.remove-temp-dir}"/>
      <sysproperty key="test.mongodb-host" value="${test.mongodb-host}"/>
      <sysproperty key="test.mongodb-database" value="${test.mongodb-database}"/>
      <sysproperty key="test.admin" value="${test.admin}"/>
      <sysproperty key="test.admin-token" value="${test.admin-token}"/>
      <sysproperty key="test.admin-pwd" value="${test.admin-pwd}"/>
      <sysproperty key="test.usr1" value="${test.usr1}"/>
      <sysproperty key="test.usr1-pwd" value="${test.usr1-pwd}"/>
      <sysproperty key="test.usr1-token" value="${test.usr1-token}"/>
      <sysproperty key="test.auth-service-url" value="${test.auth-service-url}"/>
      <sysproperty key="test.globus-url" value="${test.globus-url}"/>
      <sysproperty key="test.auth-service-url-allow-insecure" value="${test.auth-service-url-allow-insecure}"/>
      <test name="us.kbase.userprofile.test.FullServerTest"/>
    </junit>
    <fail message="Test failure detected, check test results." if="test.failed" />
  </target>

  <target name="clean" description="clean up" >
    <!-- Clean up internal temporary files and folders-->
    <delete dir="${classes}"/>
    <delete dir="${dist}"/>
  </target>
</project>

